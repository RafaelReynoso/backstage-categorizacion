openapi: 3.0.1
info:
  title: UTP+Class - Microservicio Course - API de Gestión Educativa
  description: "API para la gestión de cursos, evaluaciones, contenidos y video conferencias\
    \ en entornos educativos."
  termsOfService: https://dev.azure.com/master-aws/A200-UTP_CLASS/_git/back-pao-course
  contact:
    name: Angel Eduardo Hincho Jove
    url: https://github.com/ahincho
    email: ahincho@utp.edu.pe
  version: "1.0"
servers:
- url: http://localhost:8080
  description: Generated server url
tags:
- name: Video Conferencias
  description: "Gestión de reuniones, conferencias masivas y grabaciones"
- name: Evaluaciones y Calificaciones
  description: "Gestión de evaluaciones, quices, tareas y asignaciones"
- name: Contenido y Temas
  description: Administración de contenidos y visibilidad de temas
- name: Administración
  description: "Gestión de usuarios, cursos y periodos académicos"
- name: Integraciones y Sincronización
  description: Conectividad con sistemas externos como CRM y PeopleSoft
- name: Reportes y Rúbricas
  description: Generación de reportes y gestión de rúbricas
- name: Eventos
  description: Gestión de eventos en la plataforma
paths:
  /video-conference/zoom-massive/batch:
    put:
      tags:
      - Video Conferencias
      operationId: updateBatchZoomMassive
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateVideoConferenceMassiveItem'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
    post:
      tags:
      - Video Conferencias
      summary: Creación masiva de reuniones Zoom
      description: Este endpoint permite la creación masiva de reuniones Zoom para
        cursos específicos.
      operationId: createBatchZoomMassive
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/CreateVideoConferenceMassiveItem'
        required: true
      responses:
        "403":
          description: Acceso prohibido
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
        "500":
          description: Error interno del servidor
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
        "400":
          description: Solicitud incorrecta
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
        "401":
          description: No autorizado
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
        "200":
          description: Operación exitosa
          content:
            application/json:
              example:
                success: true
                code: 2
                message: OK
                data:
                  response:
                  - meetingId: "85633863630"
                    success: true
                    message: Exitoso
                    videoConferenceId: 0db688c3-b2d8-55e3-8441-d40e6afcc617
                idTransaction: aa023251-14ee-47da-80bf-c2798e9384c5
      security:
      - Authorization: []
    delete:
      tags:
      - Video Conferencias
      operationId: deleteBatchZoomMasive
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MeetingIds'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CrudVideoConferenceMassiveResponse'
  /teacher/video-conference/meeting/{id}:
    put:
      tags:
      - video-conference-meeting-controller
      operationId: update
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVideoConferenceCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/themes/{themesId}/name:
    put:
      tags:
      - update-theme-name
      operationId: putThemeTitle
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: themesId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/teams/{teamId}/grade:
    put:
      tags:
      - teacher-grade-assignment-put-controller
      operationId: createTeam
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssignmentGraded'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/quizes/{id}/grade:
    put:
      tags:
      - teacher-grade-quiz-put-controller
      operationId: grade
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEvaluationGrade'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/last-individual-assignment/{assignment_id}/grade:
    put:
      tags:
      - teacher-grade-last-individual-assignment-put-controller
      operationId: create
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: team_id
        in: query
        required: true
        schema:
          type: string
      - name: homework_id
        in: query
        required: true
        schema:
          type: string
      - name: assignment_id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssignmentGraded'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{id}/save:
    put:
      tags:
      - teacher-save-homework-put-controller
      operationId: save
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSave'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{id}/published:
    put:
      tags:
      - teacher-published-homework-put-controller
      operationId: published
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublished'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/homeworks/{id}/publishdate:
    put:
      tags:
      - teacher-publish-date-homework-put-controller
      operationId: published_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublished'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/homeworks/{id}/finish:
    put:
      tags:
      - teacher-finish-homework-put-controller
      operationId: publish
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPut'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/homeworks/{homeworkId}:
    put:
      tags:
      - teacher-edit-homework-put-controller
      operationId: create_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEdit'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{evaluationId}:
    put:
      tags:
      - teacher-edit-evaluation-put-controller
      operationId: published_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestEditEvaluation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{evaluationId}/save:
    put:
      tags:
      - teacher-save-evaluation-put-controller
      operationId: save_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSave'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{evaluationId}/published:
    put:
      tags:
      - teacher-published-evaluation-put-controller
      operationId: published_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPublished'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/evaluations/{evaluationId}/per-associate:
    put:
      tags:
      - teacher-per-associate-evaluation-put-controller
      operationId: perAssociate
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestFinish'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/evaluation/{evaluationId}/save:
    put:
      tags:
      - teacher-save-evaluation-controller
      operationId: save_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSaveEvaluation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/assignments/{id}/grade:
    put:
      tags:
      - teacher-grade-assignment-put-controller
      operationId: create_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssignmentGraded'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/quizes/{id}/send:
    put:
      tags:
      - student-send-quiz-put-controller
      operationId: create_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestQuizSent'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/assignments/{id}/send:
    put:
      tags:
      - student-send-assignment-put-controller
      operationId: create_4
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssignmentSent'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/regularize-name-rubric:
    put:
      tags:
      - regularize-name-rubric-controller
      operationId: regularizeNameRubric
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/regularization-of-duplicate-cases:
    put:
      tags:
      - regularization-of-duplicate-cases-controller
      operationId: regularizationManualOfDuplicateCases
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestRegularizationOfDuplicateCase'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - regularization-of-duplicate-cases-controller
      operationId: regularizationOfDuplicateCases
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /admin/section-functionality-detail/{sectionFunctionalityId}:
    put:
      tags:
      - put-edit-section-functionality-detail-controller
      operationId: create_5
      parameters:
      - name: sectionFunctionalityId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSectionFunctionalityDetailEdit'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/videos:
    post:
      tags:
      - video-api
      operationId: createTeacherVideos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideoCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVideoResponse'
  /teacher/video-conference/meeting:
    get:
      tags:
      - video-conference-meeting-controller
      operationId: listAllTeacher
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: string
      - name: sectionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - video-conference-meeting-controller
      operationId: create_6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideoConferenceCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/quizes:
    get:
      tags:
      - teacher-list-quiz-get-controller
      operationId: quizes_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - teacher-create-quiz-post-controller
      operationId: create_7
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateQuiz'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/quizes/{id}/attempts:
    post:
      tags:
      - teacher-create-attempt-post-controller
      operationId: attempts
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks:
    get:
      tags:
      - teacher-list-homeworks-get-controller
      operationId: homeworks_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - teacher-create-homework-post-controller
      operationId: create_8
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/save:
    post:
      tags:
      - teacher-save-homework-post-controller
      operationId: save_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSaveAndCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homework/{homeworkId}:
    post:
      tags:
      - teacher-publish-homework-controller
      operationId: create_9
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homework/{homeworkId}/teams/{teamSetId}/send:
    post:
      tags:
      - post-teacher-send-team-homework-attempt-controller
      operationId: teamSets
      parameters:
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: teamSetId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSendTeamHomeworkAttempt'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations:
    get:
      tags:
      - teacher-list-evaluations-get-controller
      operationId: evaluations
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - teacher-create-evaluation-controller
      operationId: create_10
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateEvaluation'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/save:
    post:
      tags:
      - teacher-save-evaluation-post-controller
      operationId: create_11
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSaveAndCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/assignments/{assignmentId}/student/{studentId}/send:
    post:
      tags:
      - post-teacher-send-assignment-controller
      operationId: create_12
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: assignmentId
        in: path
        required: true
        schema:
          type: string
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/homeworks/{homeworkId}/students:
    post:
      tags:
      - get-validate-assignment-started-by-user-ids-controller
      operationId: getExceptions
      parameters:
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateRequestBody'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/evaluations/{evaluationId}/students:
    post:
      tags:
      - get-validate-quiz-started-by-user-ids-controller
      operationId: getExceptions_1
      parameters:
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/{activityType}/has-rubric:
    post:
      tags:
      - post-if-rubric-has-rubric-by-activities-controller
      operationId: getIfHasRubric
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activityType
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes:
    get:
      tags:
      - theme-teacher-api
      operationId: getThemes
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListThemesResponse'
    post:
      tags:
      - theme-teacher-api
      operationId: createTheme
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThemeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateIdResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/move:
    post:
      tags:
      - theme-teacher-api
      operationId: moveTheme
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: direction
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents/{contentId}/remove:
    post:
      tags:
      - theme-teacher-api
      operationId: removeContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents/{contentId}/move:
    post:
      tags:
      - theme-teacher-api
      operationId: moveContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      - name: direction
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents/save:
    post:
      tags:
      - theme-teacher-api
      operationId: saveContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents/publish:
    post:
      tags:
      - theme-teacher-api
      operationId: publishContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/associate:
    post:
      tags:
      - associate-content-to-theme-post-controller
      operationId: associateContents
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssociateContentsToThemeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/shared-contents:
    post:
      tags:
      - shared-content-teacher-post-controller
      operationId: create_13
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSharedContents'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/shared-contents/{sharedContentId}/import:
    post:
      tags:
      - shared-content-teacher-post-controller
      operationId: importContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: sharedContentId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSharedContents'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/shared-contents/{sharedContentId}/import-by-weeks:
    post:
      tags:
      - import-shared-by-weeks-content-teacher-post-controller
      operationId: importAllContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: sharedContentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/shared-contents-by-unities:
    post:
      tags:
      - shared-by-weeks-content-teacher-post-controller
      operationId: create_14
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSharedContentsByUnities'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/numweeks/set:
    post:
      tags:
      - section-teacher-general-api
      operationId: setNumWeeks
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetSectionNumWeeksRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /student/sections/{sectionId}/quizes/{id}/attempts:
    post:
      tags:
      - student-create-attempt-post-controller
      operationId: attempts_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homework/{homeworkId}:
    post:
      tags:
      - feedback-update-view-status-post-controller
      operationId: updateFeedbackIsView
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homework/{homeworkId}/feedback/{assessedId}:
    post:
      tags:
      - student-send-feedback-to-co-worker-post-controller
      operationId: sendFeedback
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: assessedId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSendFeedback'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/update-content-status-from-forum:
    post:
      tags:
      - update-content-status-from-forum-post-controller
      operationId: updateContentStatusFromForum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContentStatusFromForumRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/set-date-forum-content:
    post:
      tags:
      - set-date-forum-content-intermal-post-controller
      operationId: setDateForumContent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSetDate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/sections/{sectionId}/unities/{unityId}/themes/{themeId}/activities:
    post:
      tags:
      - post-create-content-controller
      operationId: createContent
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateContent'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/sections/filter:
    post:
      tags:
      - filter-section-internal-controller
      operationId: getSections
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterSectionRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /internal/sections-by-ids:
    post:
      tags:
      - post-sections-by-ids-controller
      operationId: index
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/prune-content-activity:
    post:
      tags:
      - prune-content-activity-internal-post-controller
      operationId: pruneContentActivity
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPruneContentActivity'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/peoplesoft/enrollments/batch:
    post:
      tags:
      - people-soft-synchronization-api
      operationId: processEnrolls
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleSoftEnrollment'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleSoftExternalServiceResponse'
  /internal/peoplesoft/enrollments/batch/v2:
    post:
      tags:
      - people-soft-synchronization-api
      operationId: processEnrollBatch
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/PeopleSoftEnrollment'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessPeoplesoftEnrollmentBatchV2Response'
  /internal/peoplesoft/courses/batch:
    post:
      tags:
      - people-soft-synchronization-api
      operationId: createBatchCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleSoftCourse'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleSoftExternalServiceResponse'
  /internal/peoplesoft/academicperiods/batch:
    post:
      tags:
      - people-soft-synchronization-api
      operationId: processCycles
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PeopleSoftTerm'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PeopleSoftExternalServiceResponse'
  /internal/courses-and-sections-by-acadcareers-and-periods:
    post:
      tags:
      - get-courses-and-sections-by-acad-career-and-period-controller
      operationId: index_1
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/contents/videos/pending/process:
    post:
      tags:
      - video-api
      operationId: processVideos
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/contents/per_publish/process:
    post:
      tags:
      - process-per-publish-contents-post-controller
      operationId: processPerPublishContents
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/content/notification/expired:
    post:
      tags:
      - notification-content-expire-api
      operationId: index_2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestBodyNotificationContentExpireApi'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /events:
    post:
      tags:
      - events-api
      operationId: eventSubscribedOccurred
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneralResponseEventData'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /designer/videos:
    post:
      tags:
      - video-api
      operationId: createDesignerVideos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideoCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVideoResponse'
  /crm/token:
    post:
      tags:
      - crm-token-api
      operationId: createTokenCRM
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/videos:
    post:
      tags:
      - video-api
      operationId: createAdminVideos
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideoCommand'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateVideoResponse'
  /admin/section-functionality:
    post:
      tags:
      - post-create-section-functionality-controller
      operationId: create_15
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSectionFunctionalityCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/section-functionality-detail:
    post:
      tags:
      - post-create-section-functionality-detail-controller
      operationId: create_16
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSectionFunctionalityDetailCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/section-functionality-detail/{sectionFunctionalityDetailCode}/associate:
    post:
      tags:
      - post-associate-section-to-section-functionality-detail-controller
      operationId: create_17
      parameters:
      - name: sectionFunctionalityDetailCode
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssociateSectionFunctionalityDetailCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    delete:
      tags:
      - delete-associate-section-to-section-functionality-detail-controller
      operationId: delete_1
      parameters:
      - name: sectionFunctionalityDetailCode
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestAssociateSectionFunctionalityDetailDelete'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics:
    post:
      tags:
      - post-create-rubric-controller
      operationId: create_18
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports:
    get:
      tags:
      - get-rubric-report-controller
      operationId: listRubricReport
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - post-create-request-rubric-report-controller
      operationId: create_19
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateRubricReport'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports/courses:
    post:
      tags:
      - post-create-request-search-courses-controller
      operationId: create_20
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateSearchCourses'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports/course:
    get:
      tags:
      - get-rubric-report-course-controller
      operationId: listRubricReportCourse
      parameters:
      - name: filter
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    post:
      tags:
      - post-report-rubric-for-course-controller
      operationId: createReportRubricForCourse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestCreateReportRubricForCourse'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics-from-csv:
    post:
      tags:
      - import-rubric-from-csv-controller
      operationId: processRubrics
      parameters:
      - name: activityType
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ImportRubricFromCsvResponse'
  /admin/rubric-clone-for-period:
    post:
      tags:
      - clone-rubric-for-period-controller
      operationId: processRubricExist
      parameters:
      - name: fromPeriod
        in: query
        required: true
        schema:
          type: string
      - name: toPeriod
        in: query
        required: true
        schema:
          type: string
      - name: activityType
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CloneRubricResponse'
  /admin/evaluationsystem/batch:
    post:
      tags:
      - ps-batch-api
      operationId: createBatchEvaluationSystem
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EvaluationSystemBatchResponse'
  /admin/enrollments/batch:
    post:
      tags:
      - ps-batch-api
      operationId: processEnrolls_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessEnrollBatchResponse'
  /admin/courses/{courseId}/syllabus:
    post:
      tags:
      - create-syllabus-url-admin-controller
      operationId: create_21
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SyllabusUrlRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes:
    get:
      tags:
      - theme-admin-api
      operationId: getThemes_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListThemesResponse'
    post:
      tags:
      - theme-admin-api
      operationId: createTheme_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateThemeRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateIdResponse'
  /admin/courses/batch:
    post:
      tags:
      - ps-batch-api
      operationId: createBatchCourse_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateCoursesBatchResponse'
  /admin/courses-by-catalogs:
    post:
      tags:
      - post-sections-by-course-ids-and-period-controller
      operationId: index_3
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/courses-by-catalogs/download:
    post:
      tags:
      - post-generate-excel-from-courses-controller
      operationId: index_4
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/contents/materials:
    post:
      tags:
      - post-create-content-url-from-file-controller
      operationId: processFileMaterials
      parameters:
      - name: period
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateContentUrlFromFileResponse'
    delete:
      tags:
      - post-create-content-url-from-file-controller
      operationId: deleteFileMaterials
      parameters:
      - name: period
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteContentUrlFromFileResponse'
  /admin/contents/bibliography:
    post:
      tags:
      - post-create-content-url-from-file-controller
      operationId: processFileBibliography
      parameters:
      - name: period
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CreateContentUrlFromFileResponse'
    delete:
      tags:
      - post-create-content-url-from-file-controller
      operationId: deleteFileBibliography
      parameters:
      - name: period
        in: query
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/DeleteContentUrlFromFileResponse'
  /admin/academicperiods/batch:
    post:
      tags:
      - ps-batch-api
      operationId: processCycles_1
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ProcessUpdateBatchResponse'
  /teacher/student/{studentId}/sections/{sectionId}/evaluations/{evaluationId}/quizzes/{quizId}/attempt/{attemptId}:
    patch:
      tags:
      - patch-teacher-finish-quiz-attempt-controller
      operationId: quizes
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      - name: quizId
        in: path
        required: true
        schema:
          type: string
      - name: attemptId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/themes/{themeId}/isVisible/{isVisible}:
    patch:
      tags:
      - teacher-update-theme-content-to-visible-patch-controller
      operationId: changeThemeToVisible
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: isVisible
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /teacher/sections/{sectionId}/quizes/{id}:
    get:
      tags:
      - teacher-find-quiz-by-id-get-controller
      operationId: quiz
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    patch:
      tags:
      - teacher-update-quiz-patch-controller
      operationId: create_22
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestQuizUpdate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{id}/setdate:
    patch:
      tags:
      - teacher-set-date-homework-patch-controller
      operationId: publish_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestPutDate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/evaluations/{id}/setdate:
    patch:
      tags:
      - teacher-set-date-evaluation-patch-controller
      operationId: finish
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestSetDate'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/sections/{sectionId}/evaluations/{evaluationId}/synchronized/edit:
    patch:
      tags:
      - teacher-edit-synchronized-evaluation-patch-controller
      operationId: editSynchronizedEvaluation
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EvaluationSynchronizedRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/contents/{contentId}/isVisible/{isVisible}:
    patch:
      tags:
      - teacher-update-content-to-visible-patch-controller
      operationId: changeContentToVisible
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      - name: isVisible
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /teacher/sections/{sectionId}/admission-exam/{admissionExamId}/set-date:
    patch:
      tags:
      - patch-admission-exam-set-date-controller
      operationId: setDate
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: admissionExamId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDateAdmissionExamRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents/{contentId}:
    delete:
      tags:
      - theme-teacher-api
      operationId: deleteContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    patch:
      tags:
      - theme-teacher-api
      operationId: patchContent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      - name: force
        in: query
        required: false
        schema:
          type: boolean
          default: false
      - name: status
        in: query
        required: false
        schema:
          type: string
      - name: numViewers
        in: query
        required: false
        schema:
          type: integer
          format: int64
          default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /student/sections/{sectionId}/evaluations/{evaluationId}/start-date:
    patch:
      tags:
      - patch-student-attempt-start-date-controller
      operationId: create_23
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/evaluations/{evaluationId}/quizes/{quizId}/attempt/{attemptId}:
    patch:
      tags:
      - student-finish-quiz-attemp-patch-controller
      operationId: quizes_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      - name: quizId
        in: path
        required: true
        schema:
          type: string
      - name: attemptId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/video-conference/meeting/withoutrecording:
    patch:
      tags:
      - migrate-video-conference-recording-api
      operationId: withoutRecording
      parameters:
      - name: dateStart
        in: query
        required: true
        schema:
          type: string
      - name: dateEnd
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/video-conference/meeting/recording:
    patch:
      tags:
      - migrate-video-conference-recording-api
      operationId: index_5
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/sections/{sectionId}/unities/{unityId}/themes/{themeId}/activities/{activityId}:
    patch:
      tags:
      - put-edit-content-controller
      operationId: updateContent
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/sections/{sectionId}/themes/{themeId}/isVisible/{isVisible}:
    patch:
      tags:
      - internal-update-theme-content-to-visible-patch-controller
      operationId: changeThemeToVisible_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      - name: isVisible
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /internal/sections/{sectionId}/contents/{contentId}/isVisible/{isVisible}:
    patch:
      tags:
      - internal-update-content-to-visible-patch-controller
      operationId: changeContentToVisible_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      - name: isVisible
        in: path
        required: true
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
  /internal/evaluations/finish/batch:
    patch:
      tags:
      - finish-evaluation-api
      operationId: index_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/course/syllabus/batch:
    patch:
      tags:
      - syllabus-course-api
      operationId: index_7
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/content/progress/regularize:
    patch:
      tags:
      - regularize-progress-api
      operationId: index_8
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/content/activity-id/regularize-for-activities:
    patch:
      tags:
      - regularize-activity-id-for-activities-patch-controller
      operationId: regularizeActivityId
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/update-proctorizer-sections:
    patch:
      tags:
      - patch-update-is-proctorizer-section-controller
      operationId: create_24
      parameters:
      - name: active
        in: query
        required: false
        schema:
          type: string
          default: "0"
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/sections/{sectionId}/section-display:
    patch:
      tags:
      - update-section-display-admin-controller
      operationId: updateSection
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSectionDisplayRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/periods/{periodId}/period-display:
    patch:
      tags:
      - update-academic-period-display-admin-controller
      operationId: updateAcademicPeriodDisplay
      parameters:
      - name: periodId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAcademicPeriodDisplayRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/evaluations/finish/single/batch/evaluation/{evaluationId}/quiz/{quizId}/attemp/{attempId}/student/{studentId}:
    patch:
      tags:
      - finish-evaluation-api
      operationId: finishSingle
      parameters:
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      - name: quizId
        in: path
        required: true
        schema:
          type: string
      - name: attempId
        in: path
        required: true
        schema:
          type: string
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /admin/courses/{courseId}/sections/{sectionId}/homework/{homeworkId}/regularize:
    patch:
      tags:
      - regularize-homework-assignment-patch-controller
      operationId: homeworks
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /admin/courses/{courseId}/sections/{sectionId}/forum/{forumId}/regularize:
    patch:
      tags:
      - regularize-forum-evaluation-patch-controller
      operationId: index_9
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: forumId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /admin/courses/{courseId}/sections/{sectionId}/evaluation/{evaluationId}/regularize:
    patch:
      tags:
      - regularize-evaluation-assignment-patch-controller
      operationId: index_10
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/{teacherId}/sections:
    get:
      tags:
      - dashboard-teacher-api
      operationId: meDashboardSections
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      - name: periods
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTeacherDashboardSectionsResponse'
  /teacher/{teacherId}/dashboard/sections:
    get:
      tags:
      - list-section-teacher-controller
      operationId: getSections_1
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      - name: periodId
        in: query
        required: false
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodsTeacherResponse'
  /teacher/{teacherId}/dashboard/periods:
    get:
      tags:
      - list-academic-period-teacher-controller
      operationId: getAcademicPeriodsDashboardFilter
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetAcademicPeriodDashboardFilterResponse'
  /teacher/{teacherId}/courses:
    get:
      tags:
      - teacher-course-find-by-section-controller
      operationId: getTeacherCoursesPost
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
  /teacher/{teacherId}/acad-careers:
    get:
      tags:
      - get-acad-careers-by-teacher-controller
      operationId: getProgramsByTeacher
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcadCareersByTeacherResponse'
  /teacher/video-conference/users/{userEmail}/validate:
    get:
      tags:
      - video-conference-user-controller
      operationId: validate
      parameters:
      - name: userEmail
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/video-conference/meeting/{id}/report:
    get:
      tags:
      - video-conference-meeting-controller
      operationId: report
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/servertime:
    get:
      tags:
      - server-time-controller
      operationId: getServerTimeTeacher
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/quiz/{quizId}/attempt/grade:
    get:
      tags:
      - list-quiz-attempt-by-quiz-id-get-controller
      operationId: listQuizAttemptByQuiz
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: quizId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{id}:
    get:
      tags:
      - teacher-find-homework-by-id-get-controller
      operationId: homework
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    delete:
      tags:
      - teacher-delete-homework-delete-controller
      operationId: create_25
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{id}/resume:
    get:
      tags:
      - homework-resumen-teacher-get-controller
      operationId: homeworkResume
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{homeworkId}/teamsets/{teamsetId}:
    get:
      tags:
      - teacher-get-full-team-homework-information-for-team-set-controller
      operationId: homeworkResume_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: teamsetId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{homeworkId}/teams/{teamId}:
    get:
      tags:
      - teacher-get-team-homework-attempts-history-controller
      operationId: homeworkResume_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{homeworkId}/teams/{teamId}/lastattempt:
    get:
      tags:
      - teacher-get-team-homework-last-attempt-controller
      operationId: homeworkResume_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homeworks/{homeworkId}/exceptions:
    get:
      tags:
      - get-list-homework-exception-by-homework-id-controller
      operationId: getExceptions_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homework/{homeworkId}/user/{userId}/evaluation:
    get:
      tags:
      - teacher-list-assignment-get-controller
      operationId: teacherListAssignmentEvaluationByUserId
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: userId
        in: path
        required: true
        schema:
          type: string
      - name: filterStatus
        in: query
        required: false
        schema:
          type: string
          default: ALL
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/homework/{homeworkId}/evaluation:
    get:
      tags:
      - teacher-list-assignment-get-controller
      operationId: teacherListAssignmentEvaluation
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      - name: filterStatus
        in: query
        required: false
        schema:
          type: string
          default: ALL
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{id}:
    get:
      tags:
      - teacher-find-evaluation-by-id-get-controller
      operationId: evaluation
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
    delete:
      tags:
      - teacher-delete-evaluation-delete-controller
      operationId: create_26
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{id}/edit:
    get:
      tags:
      - teacher-find-evaluation-by-id-get-controller
      operationId: evaluationForEdit
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{id}/answers:
    get:
      tags:
      - teacher-list-answer-get-controller
      operationId: answers
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluations/{evaluationId}/exceptions:
    get:
      tags:
      - get-list-evaluation-exception-by-evaluation-id-controller
      operationId: getExceptions_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/evaluation/{evaluationId}/quiz/grade:
    get:
      tags:
      - list-quiz-by-evaluation-id-get-controller
      operationId: teacherListQuizEvaluation
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      - name: filterStatus
        in: query
        required: false
        schema:
          type: string
          default: ALL
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/assignments:
    get:
      tags:
      - teacher-list-assignment-get-controller
      operationId: quizes_3
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/assignments/{id}:
    get:
      tags:
      - teacher-find-assignment-by-id-get-controller
      operationId: quiz_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/sections/{sectionId}/admission-group/{admissionGroup}/admission-exam/resume:
    get:
      tags:
      - get-teacher-admission-exam-for-resume-controller
      operationId: getEvaluationForResume
      parameters:
      - name: admissionGroup
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}:
    get:
      tags:
      - section-teacher-api
      operationId: getSection
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/{activityType}/{activityId}/rubrics:
    get:
      tags:
      - get-rubric-by-activity-controller
      operationId: getByTeacher
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activityType
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/weeks:
    get:
      tags:
      - get-weeks-unities-themes-by-section-controller
      operationId: getWeeksUnitiesAndThemes
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetWeeksUnitiesThemesBySectionResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}:
    get:
      tags:
      - theme-teacher-api
      operationId: getTheme
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
    delete:
      tags:
      - section-teacher-general-api
      operationId: deleteTheme
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents:
    get:
      tags:
      - theme-teacher-api
      operationId: listContents
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListContentsResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/syllabus:
    get:
      tags:
      - get-syllabus-course-controller
      operationId: indexTeacher
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CoursePeriodResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/full:
    get:
      tags:
      - get-section-full-get-controller
      operationId: getSectionFullForAllTeacher
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionFullResponse'
  /teacher/courses/{courseId}/sections/{sectionId}/contents:
    get:
      tags:
      - get-contents-repository-controller
      operationId: index_11
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/contents/qualificated:
    get:
      tags:
      - get-contents-qualificated-controller
      operationId: index_12
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /teacher/courses/{courseId}/sections/{sectionId}/contents/qualificated/download:
    get:
      tags:
      - get-file-download-grades-controller
      operationId: index_13
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /teacher/courses/sections:
    get:
      tags:
      - teacher-course-find-by-section-controller
      operationId: getTeacherCourses
      parameters:
      - name: sectionsId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
  /teacher/courses/sections/{sectionId}:
    get:
      tags:
      - teacher-course-find-by-section-controller
      operationId: getTeacherCourse
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
  /teacher/academicperiods:
    get:
      tags:
      - academic-period-teacher-api
      operationId: getAcademicPeriods
      parameters:
      - name: active
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodResponse'
  /teacher/academicperiods/find:
    get:
      tags:
      - academic-period-teacher-api
      operationId: getAcademicPeriodByActiveAndParams
      parameters:
      - name: active
        in: query
        required: false
        schema:
          type: boolean
      - name: period
        in: query
        required: true
        schema:
          type: string
      - name: acadCareer
        in: query
        required: true
        schema:
          type: string
      - name: module
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetAcademicPeriodResponse'
  /teacher/academic-period/grouping:
    get:
      tags:
      - filter-academic-period-teacher-controller
      operationId: getAcademicPeriods_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResumeAcademicPeriodResponse'
  /support/search-sections:
    get:
      tags:
      - get-section-by-period-and-name-controller
      operationId: getAcademicPeriods_2
      parameters:
      - name: filterText
        in: query
        required: true
        schema:
          type: string
      - name: acadCareer
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: period
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: module
        in: query
        required: false
        schema:
          type: string
          default: ""
      - name: allPeriods
        in: query
        required: false
        schema:
          type: string
          default: "0"
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSectionByPeriodAndNameResponse'
  /support/academic-periods:
    get:
      tags:
      - get-academic-periods-controller
      operationId: getAcademicPeriods_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAllAcademicPeriodResponse'
  /student/{studentId}/sections:
    get:
      tags:
      - dashboard-student-api
      operationId: getDashboardSections
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListDashboardCourseSectionResponse'
  /student/{studentId}/dashboard/sections:
    get:
      tags:
      - list-section-student-controller
      operationId: getSections_2
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      - name: periodId
        in: query
        required: false
        schema:
          type: string
      - name: type
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodsStudentResponse'
  /student/{studentId}/dashboard/periods:
    get:
      tags:
      - list-academic-period-student-controller
      operationId: getAcademicPeriodsDashboardFilter_1
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetAcademicPeriodDashboardFilterResponse'
  /student/{studentId}/courses/{courseId}/sections/{sectionId}/{activityType}/{activityId}/graded-rubrics:
    get:
      tags:
      - get-rubric-by-activity-controller
      operationId: getRubricGradedByStudent
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activityType
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/{studentId}/academicperiods:
    get:
      tags:
      - filter-academic-period-student-controller
      operationId: getAcademicPeriods_4
      parameters:
      - name: studentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResumeAcademicPeriodResponse'
  /student/video-conference/meeting:
    get:
      tags:
      - video-conference-meeting-controller
      operationId: listAllStudent
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: string
      - name: sectionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/servertime:
    get:
      tags:
      - server-time-controller
      operationId: getServerTimeStudent
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/team-members:
    get:
      tags:
      - homework-and-team-members-resume-get-controller
      operationId: homeworkTeamMembers
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/team-members/{teamId}:
    get:
      tags:
      - homework-and-team-members-by-team-id-get-controller
      operationId: teamMembers
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: teamId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/quizes:
    get:
      tags:
      - student-list-quiz-get-controller
      operationId: quizes_4
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/quizes/by/evaluations/{evaluationId}:
    get:
      tags:
      - student-list-quiz-by-evaluation-id-get-controller
      operationId: quizes_5
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: evaluationId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homeworks/{id}:
    get:
      tags:
      - student-find-homework-by-id-get-controller
      operationId: homework_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homeworks/{id}/resume:
    get:
      tags:
      - homework-resumen-student-get-controller
      operationId: homeworkResume_4
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homework/{homeworkId}/view-status:
    get:
      tags:
      - student-validate-feedback-was-seen-get-controller
      operationId: validateStatusViewFeedback
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/homework/{homeworkId}/feedback:
    get:
      tags:
      - student-average-feedbacks-score-get-controller
      operationId: getAverage
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: homeworkId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/grade:
    get:
      tags:
      - grade-list-by-id-student-get-controller
      operationId: indexTeacher_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/evaluations/{id}:
    get:
      tags:
      - student-find-evaluation-by-id-get-controller
      operationId: evaluation_1
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/evaluations/{id}/attempts/{attemptId}:
    get:
      tags:
      - student-find-evaluation-by-id-get-controller
      operationId: evaluationByAttempt
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: id
        in: path
        required: true
        schema:
          type: string
      - name: attemptId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/sections/{sectionId}/assignments:
    get:
      tags:
      - student-list-assignment-get-controller
      operationId: index_14
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: params
        in: query
        required: true
        schema:
          type: object
          additionalProperties:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/home:
    get:
      tags:
      - get-home-controller
      operationId: indexHome
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/courses/{courseId}/sections/{sectionId}:
    get:
      tags:
      - section-student-api
      operationId: getSection_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionBySectionIdCourseIdResponse'
  /student/courses/{courseId}/sections/{sectionId}/{activityType}/{activityId}/rubrics:
    get:
      tags:
      - get-rubric-by-activity-controller
      operationId: getByStudent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activityType
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/courses/{courseId}/sections/{sectionId}/syllabus:
    get:
      tags:
      - get-syllabus-course-controller
      operationId: indexStudent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CoursePeriodResponse'
  /student/courses/{courseId}/sections/{sectionId}/full:
    get:
      tags:
      - get-section-full-get-controller
      operationId: getSectionFullForStudent
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionFullResponse'
  /student/courses/{courseId}/sections/{sectionId}/contents/{type}:
    get:
      tags:
      - get-contents-controller
      operationId: index_15
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /student/courses/{courseId}/sections/{sectionId}/contents/{type}/{activityId}:
    get:
      tags:
      - get-contents-controller
      operationId: indexByActivityId
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: type
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /student/courses/sections:
    get:
      tags:
      - student-course-find-by-section-controller
      operationId: getStudentCourses
      parameters:
      - name: sectionsId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
  /student/courses/sections/{sectionId}:
    get:
      tags:
      - student-course-find-by-section-controller
      operationId: getStudentCourse
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
  /student/calendar:
    get:
      tags:
      - get-calendar-by-user-and-date-student-controller
      operationId: index_16
      parameters:
      - name: dateToQuery
        in: query
        required: false
        schema:
          type: string
      - name: intervalMode
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/calendar/meetings:
    get:
      tags:
      - get-calendar-by-user-and-date-student-controller
      operationId: indexMeetings
      parameters:
      - name: dateToQuery
        in: query
        required: false
        schema:
          type: string
      - name: intervalMode
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/calendar/activities:
    get:
      tags:
      - get-calendar-by-user-and-date-student-controller
      operationId: indexActivities
      parameters:
      - name: dateToQuery
        in: query
        required: false
        schema:
          type: string
      - name: intervalMode
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/activities/pending:
    get:
      tags:
      - get-list-activities-pending-by-student-controller
      operationId: indexStudent_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /student/academicperiods:
    get:
      tags:
      - academic-period-student-api
      operationId: getAcademicPeriods_5
      parameters:
      - name: active
        in: query
        required: false
        schema:
          type: boolean
      - name: acadCareer
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodResponse'
  /ping:
    get:
      tags:
      - health-api
      operationId: ping
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/teacher/{teacherId}/sections/min:
    get:
      tags:
      - dashboard-teacher-api
      operationId: meDashboardSections_1
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /internal/sections:
    get:
      tags:
      - dashboard-teacher-api
      operationId: teacherSections
      parameters:
      - name: teacherId
        in: query
        required: true
        schema:
          type: string
      - name: periodsId
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListTeacherDashboardSectionsResponse'
  /internal/sections/{sectionId}/teachers/{teacherId}:
    get:
      tags:
      - verify-teacher-section-get-controller
      operationId: getSection_2
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/sections/{sectionId}/full:
    get:
      tags:
      - section-general-api
      operationId: getSectionFull
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionFullResponse'
  /internal/sections/search/teacher/{teacherId}:
    get:
      tags:
      - search-section-api
      operationId: getSection_3
      parameters:
      - name: teacherId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSectionsResponse'
  /internal/sections/list:
    get:
      tags:
      - section-general-api
      operationId: listSections
      parameters:
      - name: sectionsId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSectionsResponse'
  /internal/section/{sectionId}/simple:
    get:
      tags:
      - section-simple-api
      operationId: getSectionSimple
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SimpleWeekSectionResponse'
  /internal/section/{sectionId}/progress_structure:
    get:
      tags:
      - course-progress-structure-api
      operationId: getProgressStructure
      parameters:
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CourseProgressStructureResponse'
  /internal/list/dashboard/course/section:
    get:
      tags:
      - list-dashboard-course-section-api
      operationId: listDashboardCourseSection
      parameters:
      - name: sectionsId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DashboardCourseSectionResponse'
  /internal/list/dashboard/course/section-by-acadcareers:
    get:
      tags:
      - list-dashboard-course-section-api
      operationId: listAcadCareersBySection
      parameters:
      - name: sectionsId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
  /internal/homeworks:
    get:
      tags:
      - internal-homework-content-list-get-controller
      operationId: homeworks_2
      parameters:
      - name: sectionId
        in: query
        required: true
        schema:
          type: string
      - name: exludedActivitiesId
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/get-theme-by-activity-id:
    get:
      tags:
      - get-theme-by-activity-id-internal-get-controller
      operationId: index_17
      parameters:
      - name: activityId
        in: query
        required: false
        schema:
          type: string
          default: ""
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
  /internal/get-section:
    get:
      tags:
      - get-section-internal-get-controller
      operationId: index_18
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: string
      - name: sectionId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionResponse'
  /internal/get-evaluation-system:
    get:
      tags:
      - evaluation-system-internal-get-controller
      operationId: index_19
      parameters:
      - name: code
        in: query
        required: true
        schema:
          type: string
      - name: courseCode
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/EvaluationSystemResponse'
  /internal/get-course:
    get:
      tags:
      - get-course-internal-get-controller
      operationId: index_20
      parameters:
      - name: courseId
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
  /internal/evaluations:
    get:
      tags:
      - internal-list-evaluation-get-controller
      operationId: evaluations_1
      parameters:
      - name: sectionId
        in: query
        required: true
        schema:
          type: string
      - name: exludedActivitiesId
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/courses:
    get:
      tags:
      - course-find-by-id-controller
      operationId: getCourses
      parameters:
      - name: coursesId
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListCoursesResponse'
  /internal/courses/{courseId}:
    get:
      tags:
      - course-find-by-id-controller
      operationId: getCourse
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
  /internal/courses/{courseId}/sections/{sectionId}:
    get:
      tags:
      - section-general-api
      operationId: getSections_3
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionResponse'
  /internal/courses/{courseId}/sections/{sectionId}/full:
    get:
      tags:
      - get-section-full-get-controller
      operationId: getSectionFullForAny
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: status
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      - name: studentId
        in: query
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionFullResponse'
  /internal/courses/{courseId}/sections/{sectionId}/forum/information:
    get:
      tags:
      - get-activity-information-controller
      operationId: activityInformation
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: activitiesIdsList
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /internal/contents/activity/{activityId}:
    get:
      tags:
      - get-content-by-activity-id-controller
      operationId: obtainContentDetail
      parameters:
      - name: activityId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /internal/content/{contentId}/progress_structure:
    get:
      tags:
      - course-progress-structure-api
      operationId: getProgressStructureByContentId
      parameters:
      - name: contentId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CourseProgressStructureResponse'
  /internal/admission/resume/{templateId}:
    get:
      tags:
      - get-generate-csv-with-resume-controller
      operationId: generateCsvResume
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /internal/admission/results:
    get:
      tags:
      - get-generate-csv-with-results-controller
      operationId: generateCsvResults
      parameters:
      - name: date
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /internal/admission/detail/{templateId}:
    get:
      tags:
      - get-generate-csv-with-detail-controller
      operationId: generateCsvDetail
      parameters:
      - name: templateId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  type: string
                  format: byte
  /internal/academic-periods/current:
    get:
      tags:
      - get-current-academic-period-controller
      operationId: getAcademicPeriods_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodResponse'
  /health:
    get:
      tags:
      - health-api
      operationId: getHealthy
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports/course/download:
    get:
      tags:
      - get-rubric-report-course-controller
      operationId: listRubricReportCourse_1
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports/allcourse:
    get:
      tags:
      - get-rubric-report-course-controller
      operationId: listRubricReportAllCourse
      parameters:
      - name: id
        in: query
        required: true
        schema:
          type: string
      - name: filter
        in: query
        required: true
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/periods:
    get:
      tags:
      - get-periods-for-rubrics-controller
      operationId: getPeriodsForRubric
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/periods/{period}/programs:
    get:
      tags:
      - get-programs-by-period-controller
      operationId: getProgramsByPeriod
      parameters:
      - name: period
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/proctorizer-token:
    get:
      tags:
      - get-proctorizer-token-controller
      operationId: getTokenTest
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/periods:
    get:
      tags:
      - list-academic-period-admin-controller
      operationId: getAcademicPeriods_7
      parameters:
      - name: filter
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodsAdminResponse'
  /admin/periods/sections:
    get:
      tags:
      - list-section-admin-controller
      operationId: getSections_4
      parameters:
      - name: year
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: periodId
        in: query
        required: false
        schema:
          type: string
      - name: filter
        in: query
        required: false
        schema:
          type: string
      - name: page
        in: query
        required: true
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: true
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSectionsAdminResponse'
  /admin/courses/{courseId}:
    get:
      tags:
      - course-api
      operationId: getCourse_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetCourseResponse'
  /admin/courses/{courseId}/sections:
    get:
      tags:
      - section-admin-api
      operationId: listSections_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListSectionsResponse'
  /admin/courses/{courseId}/sections/{sectionId}:
    get:
      tags:
      - section-admin-api
      operationId: getSection_4
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetSectionResponse'
  /admin/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}:
    get:
      tags:
      - theme-admin-api
      operationId: getTheme_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/GetThemeResponse'
  /admin/courses/{courseId}/sections/{sectionId}/unities/{unityId}/themes/{themeId}/contents:
    get:
      tags:
      - theme-admin-api
      operationId: listContents_1
      parameters:
      - name: courseId
        in: path
        required: true
        schema:
          type: string
      - name: sectionId
        in: path
        required: true
        schema:
          type: string
      - name: unityId
        in: path
        required: true
        schema:
          type: string
      - name: themeId
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListContentsResponse'
  /admin/academicperiods:
    get:
      tags:
      - academic-period-admin-api
      operationId: getAcademicPeriods_8
      parameters:
      - name: active
        in: query
        required: false
        schema:
          type: boolean
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ListAcademicPeriodResponse'
  /teacher/video-conference/meeting/delete:
    delete:
      tags:
      - video-conference-meeting-controller
      operationId: delete
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MeetingsToDeleteIds'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
  /admin/rubrics/reports/{id}:
    delete:
      tags:
      - delete-rubric-report-controller
      operationId: create_27
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RestResponse'
components:
  schemas:
    CreateVideoConferenceMassiveItem:
      type: object
      properties:
        irlId:
          type: string
          description: Identificador interno de la solicitud.
          example: "12345"
        irlSysCourseId:
          type: string
          description: Identificador del curso en el sistema.
          example: CS101
        irlEmail:
          type: string
          description: Correo del docente anfitrión (debe estar registrado en Class).
          example: profesor@universidad.com
        irlCreated:
          type: string
          description: Fecha de creación de la solicitud en formato ISO 8601.
          example: 2025-02-21T10:00:00Z
        irlUpdated:
          type: string
          description: Fecha de última actualización de la solicitud en formato ISO
            8601.
          example: 2025-02-22T15:30:00Z
        meetingId:
          type: string
          description: Identificador único de la reunión en Zoom.
          example: "85633863630"
        joinUrl:
          type: string
          description: URL de acceso a la reunión en Zoom.
          example: https://zoom.us/j/85633863630
        meetingTopic:
          type: string
          description: Título de la reunión.
          example: Reunión de coordinación académica
        meetingAgenda:
          type: string
          description: Detalles de la agenda de la reunión (opcional).
          example: Revisión del plan de estudios y asignación de horarios
        meetingStartDate:
          type: string
          description: Fecha y hora de inicio de la reunión en formato ISO 8601 con
            zona horaria.
          example: 2025-02-25T14:00:00Z
        meetingDuration:
          type: string
          description: Duración de la reunión en minutos.
          example: "60"
        meetingTeacherGuests:
          type: string
          description: Docentes invitados adicionales (opcional).
          example: "docente1@universidad.com, docente2@universidad.com"
        meetingWeekNumber:
          type: integer
          description: Número de la semana académica correspondiente.
          format: int32
          example: 5
      description: Objeto de solicitud para la creación masiva de videoconferencias
        en Zoom.
    CrudVideoConferenceMassiveResponse:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/ItemVideoConferenceMassive'
    ItemVideoConferenceMassive:
      type: object
      properties:
        meetingId:
          type: string
        success:
          type: boolean
        message:
          type: string
        videoConferenceId:
          type: string
    UpdateVideoConferenceCommand:
      type: object
      properties:
        id:
          type: string
        weekNumber:
          type: string
        description:
          type: string
        startAt:
          type: string
        duration:
          type: integer
          format: int32
        teacherGuest:
          type: string
        sectionId:
          type: string
        courseId:
          type: string
        authorId:
          type: string
    RestResponse:
      type: object
      properties:
        success:
          type: boolean
        code:
          type: integer
          format: int32
        message:
          type: string
        data:
          type: object
        idTransaction:
          type: string
    RequestUpdate:
      type: object
      properties:
        name:
          type: string
    RequestAssignmentGraded:
      type: object
      properties:
        attemptId:
          type: string
        feedback:
          type: string
        score:
          type: string
        isNsp:
          type: boolean
        isPlagiarized:
          type: boolean
        isZero:
          type: boolean
        discountScore:
          type: string
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        gradedFiles:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        attemptRubrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    RequestEvaluationGrade:
      type: object
      properties:
        attemptId:
          type: string
        score:
          type: number
          format: double
        questions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    RequestSave:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        rubrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        unityId:
          type: string
        themeId:
          type: string
    RequestPublished:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        sectionId:
          type: string
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        rubrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    RequestPut:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        sectionId:
          type: string
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        rubrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    RequestEdit:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        unityId:
          type: string
        themeId:
          type: string
    RequestEditEvaluation:
      type: object
      properties:
        evaluationType:
          type: string
        isQualificated:
          type: string
        randomOrder:
          type: string
        singleQuestion:
          type: string
        showAnswers:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        duration:
          type: integer
          format: int32
        title:
          type: string
        instructions:
          type: string
        attempts:
          type: integer
          format: int32
        qualificationType:
          type: string
        exactAvailability:
          type: boolean
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        questionRandom:
          type: boolean
        isBank:
          type: boolean
        groupQuestions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isProctorizer:
          type: boolean
        proctorizerType:
          type: string
        evaluationBankId:
          type: string
        unityId:
          type: string
        themeId:
          type: string
    RequestFinish:
      type: object
      properties:
        evaluationType:
          type: string
        isQualificated:
          type: string
        randomOrder:
          type: string
        singleQuestion:
          type: string
        showAnswers:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        duration:
          type: integer
          format: int32
        title:
          type: string
        instructions:
          type: string
        attempts:
          type: integer
          format: int32
        qualificationType:
          type: string
        sectionId:
          type: string
        exactAvailability:
          type: boolean
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        questionRandom:
          type: boolean
        isBank:
          type: boolean
        groupQuestions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isProctorizer:
          type: boolean
        proctorizerType:
          type: string
    RequestSaveEvaluation:
      type: object
      properties:
        evaluationType:
          type: string
        isQualificated:
          type: string
        randomOrder:
          type: string
        singleQuestion:
          type: string
        showAnswers:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        duration:
          type: integer
          format: int32
        title:
          type: string
        instructions:
          type: string
        attempts:
          type: integer
          format: int32
        qualificationType:
          type: string
        exactAvailability:
          type: boolean
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        questionRandom:
          type: boolean
        isBank:
          type: boolean
        groupQuestions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isProctorizer:
          type: boolean
        proctorizerType:
          type: string
        courseId:
          type: string
        teacherId:
          type: string
        unityId:
          type: string
        themeId:
          type: string
        isProgrammed:
          type: boolean
        status:
          type: string
    RequestQuizSent:
      type: object
      properties:
        attemptId:
          type: string
        progress:
          type: string
        isAutoSaved:
          type: boolean
        replies:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        finalicedBy:
          type: string
        lastQuestionId:
          type: string
    RequestAssignmentSent:
      type: object
      properties:
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        comment:
          type: string
    RequestRegularizationOfDuplicateCase:
      type: object
      properties:
        activity:
          type: string
        isDeleted:
          type: boolean
        ids:
          type: array
          items:
            type: string
    RequestSectionFunctionalityDetailEdit:
      type: object
      properties:
        code:
          type: string
        description:
          type: string
        objectReturn:
          type: object
          additionalProperties:
            type: object
    CreateVideoCommand:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        size:
          type: string
    CreateVideoResponse:
      type: object
      properties:
        uri:
          type: string
        name:
          type: string
        description:
          type: string
        link:
          type: string
        upload:
          $ref: '#/components/schemas/Upload'
    Upload:
      type: object
      properties:
        status:
          type: string
        approach:
          type: string
        link:
          type: string
    CreateVideoConferenceCommand:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        weekNumber:
          type: string
        description:
          type: string
        startAt:
          type: string
        duration:
          type: integer
          format: int32
        teacherGuest:
          type: string
        sectionId:
          type: string
        courseId:
          type: string
        authorId:
          type: string
        authorEmail:
          type: string
        idIfNull:
          type: string
          writeOnly: true
    RequestCreateQuiz:
      type: object
      properties:
        evaluationId:
          type: string
        studentId:
          type: string
    RequestCreate:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        courseId:
          type: string
        teacherId:
          type: string
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        unityId:
          type: string
        themeId:
          type: string
    RequestSaveAndCreate:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        content:
          type: string
        deliverables:
          type: string
        groupItem:
          type: string
        isQualified:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        attempts:
          type: integer
          format: int32
        files:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        rubrics:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        courseId:
          type: string
        teacherId:
          type: string
        unityId:
          type: string
        themeId:
          type: string
    RequestSendTeamHomeworkAttempt:
      type: object
      properties:
        teamId:
          type: string
        studentId:
          type: string
    RequestCreateEvaluation:
      type: object
      properties:
        courseId:
          type: string
        teacherId:
          type: string
        evaluationType:
          type: string
        isQualificated:
          type: string
        randomOrder:
          type: string
        singleQuestion:
          type: string
        showAnswers:
          type: string
        availableFrom:
          type: string
        availableUntil:
          type: string
        duration:
          type: integer
          format: int32
        title:
          type: string
        instructions:
          type: string
        attempts:
          type: integer
          format: int32
        qualificationType:
          type: string
        exactAvailability:
          type: boolean
        scheduledAvailability:
          type: boolean
        topScore:
          type: integer
          format: int32
        questionRandom:
          type: boolean
        isBank:
          type: boolean
        groupQuestions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isFullPeriodActivity:
          type: boolean
        exceptions:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        isProctorizer:
          type: boolean
        proctorizerType:
          type: string
        evaluationBankId:
          type: string
        unityId:
          type: string
        themeId:
          type: string
    ValidateRequestBody:
      type: object
      properties:
        students:
          type: array
          items:
            type: string
        isGroup:
          type: boolean
    CreateThemeRequest:
      type: object
      properties:
        name:
          type: string
        weekNumber:
          type: string
    CreateIdResponse:
      type: object
      properties:
        id:
          type: string
    ContentRequest:
      type: object
      properties:
        contentId:
          type: string
        title:
          type: string
        description:
          type: string
        type:
          type: string
        dependent:
          type: boolean
        metadata:
          $ref: '#/components/schemas/MetadataRequest'
    MetadataRequest:
      type: object
    AssociateContentsToThemeActivityRequest:
      type: object
      properties:
        activityId:
          type: string
        type:
          type: string
    AssociateContentsToThemeRequest:
      type: object
      properties:
        activities:
          type: array
          items:
            $ref: '#/components/schemas/AssociateContentsToThemeActivityRequest'
    RequestSharedContents:
      type: object
      properties:
        contentType:
          type: string
        contentIds:
          type: array
          items:
            type: string
    RequestSharedContentsByUnities:
      type: object
      properties:
        weeks:
          type: array
          items:
            type: integer
            format: int32
    SetSectionNumWeeksRequest:
      type: object
      properties:
        numWeeks:
          type: string
    RequestSendFeedback:
      type: object
      properties:
        compliance:
          type: integer
          format: int32
        communication:
          type: integer
          format: int32
        positiveAttitude:
          type: integer
          format: int32
        comment:
          type: string
    UpdateContentStatusFromForumRequest:
      type: object
      properties:
        templateContentId:
          type: string
        sectionId:
          type: string
        status:
          type: string
    RequestSetDate:
      type: object
      properties:
        activityId:
          type: string
        finishAt:
          type: string
        publishAt:
          type: string
    RequestCreateContent:
      type: object
      properties:
        activityId:
          type: string
        type:
          type: string
        publishedDate:
          type: string
        dueDate:
          type: string
        isProgrammed:
          type: boolean
        status:
          type: string
    FilterSectionRequest:
      type: object
      properties:
        role:
          type: string
        sections:
          type: array
          items:
            type: string
    RequestPruneContentActivity:
      type: object
      properties:
        sectionId:
          type: string
        activityId:
          type: string
    PeopleSoftEnrollment:
      type: object
      properties:
        registerId:
          type: string
        courseId:
          type: string
        userId:
          type: string
        role:
          type: string
        status:
          type: string
        executionStatus:
          type: string
        executionComments:
          type: string
        fileId:
          type: string
    PeopleSoftExternalServiceResponse:
      type: object
      properties:
        status:
          type: string
        registerId:
          type: string
        operationType:
          type: string
        externalService:
          type: string
        registerType:
          type: string
        executionComments:
          type: string
        objectInformation:
          type: object
          additionalProperties:
            type: object
    ProcessPeoplesoftEnrollmentBatchV2Response:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/PeopleSoftExternalServiceResponse'
    PeopleSoftCourse:
      type: object
      properties:
        registerId:
          type: string
        courseId:
          type: string
        shortName:
          type: string
        longName:
          type: string
        termId:
          type: string
        accountId:
          type: string
        status:
          type: string
        executionStatus:
          type: string
        executionComments:
          type: string
        fileId:
          type: string
    PeopleSoftTerm:
      type: object
      properties:
        registerId:
          type: string
        termId:
          type: string
        name:
          type: string
        status:
          type: string
        startDate:
          type: string
        endDate:
          type: string
        fileId:
          type: string
        executionStatus:
          type: string
        executionComments:
          type: string
    RequestBodyNotificationContentExpireApi:
      type: object
      properties:
        dateSend:
          type: string
          format: date-time
        daysByExpire:
          type: integer
          format: int32
    GeneralResponseEventData:
      type: object
      properties:
        transaction_id:
          type: string
        event:
          type: string
        attributes:
          type: object
    RequestSectionFunctionalityCreate:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
        type:
          type: string
        detail:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
    RequestSectionFunctionalityDetailCreate:
      type: object
      properties:
        sectionFunctionalityId:
          type: string
        code:
          type: string
        description:
          type: string
        objectReturn:
          type: object
          additionalProperties:
            type: object
    RequestAssociateSectionFunctionalityDetailCreate:
      type: object
      properties:
        sections:
          type: array
          items:
            type: string
    RequestCreateRubricReport:
      type: object
      properties:
        program:
          type: string
        period:
          type: string
        catalogs:
          type: array
          items:
            type: string
    RequestCreateSearchCourses:
      type: object
      properties:
        catalogs:
          type: array
          items:
            type: string
    RequestCreateReportRubricForCourse:
      type: object
      properties:
        acadcareer:
          type: string
        module:
          type: string
        period:
          type: string
        course:
          type: array
          items:
            type: string
    ImportRubricFromCsvResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: object
    CloneRubricResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: object
    EvaluationSystemBatchResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int32
        results:
          type: object
    ProcessEnrollBatchResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int32
        results:
          type: object
    SyllabusUrlRequest:
      type: object
      properties:
        period:
          type: string
        syllabusUrl:
          type: string
    CreateCoursesBatchResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int32
        results:
          type: object
    CreateContentUrlFromFileResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: object
    ProcessUpdateBatchResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: integer
            format: int32
        results:
          type: object
    RequestQuizUpdate:
      type: object
      properties:
        evaluationId:
          type: string
        studentId:
          type: string
        status:
          type: string
        progress:
          type: string
        score:
          type: number
          format: double
    RequestPutDate:
      type: object
      properties:
        availableFrom:
          type: string
        availableUntil:
          type: string
        scheduledAvailability:
          type: boolean
        isGroup:
          type: boolean
        groupId:
          type: string
        isFullPeriodActivity:
          type: boolean
    AttemptsRequest:
      required:
      - attempts
      - qualificationType
      type: object
      properties:
        attempts:
          maximum: 10
          minimum: 1
          type: integer
          format: int32
        qualificationType:
          type: string
    EvaluationSynchronizedRequest:
      type: object
      properties:
        setDate:
          $ref: '#/components/schemas/SetDateRequest'
        attempts:
          $ref: '#/components/schemas/AttemptsRequest'
    SetDateRequest:
      required:
      - availableFrom
      - availableUntil
      - duration
      - exactAvailability
      - scheduledAvailability
      type: object
      properties:
        availableFrom:
          type: string
        availableUntil:
          type: string
        exactAvailability:
          type: boolean
        scheduledAvailability:
          type: boolean
        duration:
          minimum: 1
          type: integer
          format: int32
        isFullPeriodActivity:
          type: boolean
    SetDateAdmissionExamRequest:
      type: object
      properties:
        availableFrom:
          type: string
        availableUntil:
          type: string
    DisplaySettingRequest:
      type: object
      properties:
        role:
          type: string
        showContent:
          type: boolean
        finished:
          type: boolean
    UpdateSectionDisplayRequest:
      type: object
      properties:
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/DisplaySettingRequest'
    UpdateAcademicPeriodDisplayRequest:
      type: object
      properties:
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/DisplaySettingRequest'
    GetTeacherCourseResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCode:
          type: string
        courseId:
          type: string
        classNumber:
          type: string
        teacherId:
          type: string
        campus:
          type: string
        program:
          type: string
        modality:
          type: string
        period:
          type: string
        periodName:
          type: string
        classroom:
          type: string
        turn:
          type: string
        module:
          type: string
        faculty:
          type: string
        acadCareer:
          type: string
        cycle:
          type: string
        capacity:
          type: integer
          format: int32
        start:
          type: string
        end:
          type: string
        active:
          type: boolean
        duration:
          type: integer
          format: int32
        numThemes:
          type: integer
          format: int32
        numWeeks:
          type: integer
          format: int32
        teacherIds:
          type: array
          items:
            type: string
        isProctorizer:
          type: boolean
    ListTeacherDashboardSectionsResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/GetTeacherCourseResponse'
    CourseSectionResponse:
      type: object
      properties:
        periodId:
          type: string
        periodName:
          type: string
        periodType:
          type: string
        sectionId:
          type: string
        courseId:
          type: string
        active:
          type: boolean
        sectionCode:
          type: string
        classroom:
          type: string
        classNumber:
          type: string
        modality:
          type: string
        acadCareer:
          type: string
        courseCode:
          type: string
        name:
          type: string
        period:
          type: string
        module:
          type: string
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/SectionDisplaySetting'
    ListAcademicPeriodsTeacherResponse:
      type: object
      properties:
        activeCourses:
          type: array
          items:
            $ref: '#/components/schemas/CourseSectionResponse'
        finishedCourses:
          type: array
          items:
            $ref: '#/components/schemas/CourseSectionResponse'
    SectionDisplaySetting:
      type: object
      properties:
        role:
          type: string
        showContent:
          type: boolean
        finished:
          type: boolean
    DisplaySetting:
      type: object
      properties:
        start:
          type: string
          format: date
        end:
          type: string
          format: date
    GetAcademicPeriodDashboard:
      type: object
      properties:
        id:
          type: string
        period:
          type: string
        acadCareer:
          type: string
        module:
          type: string
        name:
          type: string
        active:
          type: boolean
        start:
          type: string
        end:
          type: string
        type:
          type: string
        displaySetting:
          $ref: '#/components/schemas/DisplaySetting'
    GetAcademicPeriodDashboardFilterResponse:
      type: object
      properties:
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetAcademicPeriodDashboard'
    GetCourseResponse:
      type: object
      properties:
        courseId:
          type: string
        code:
          type: string
        name:
          type: string
        description:
          type: string
        language:
          type: string
        level:
          type: string
        contentTypes:
          type: array
          items:
            type: string
        introduction:
          $ref: '#/components/schemas/Introduction'
        achievements:
          type: array
          items:
            type: string
        syllabusUrl:
          type: string
    Introduction:
      type: object
      properties:
        videoUrl:
          type: string
        imageUrl:
          type: string
        width:
          type: integer
          format: int32
        height:
          type: integer
          format: int32
    ListCoursesResponse:
      type: object
      properties:
        courses:
          type: array
          items:
            $ref: '#/components/schemas/GetCourseResponse'
    ListAcadCareersByTeacherResponse:
      type: object
      properties:
        acadCareers:
          type: array
          items:
            type: string
    GetSectionResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCode:
          type: string
        courseId:
          type: string
        classNumber:
          type: string
        teacherId:
          type: string
        campus:
          type: string
        program:
          type: string
        modality:
          type: string
        period:
          type: string
        classroom:
          type: string
        turn:
          type: string
        module:
          type: string
        faculty:
          type: string
        acadCareer:
          type: string
        cycle:
          type: string
        capacity:
          type: integer
          format: int32
        start:
          type: string
        end:
          type: string
        active:
          type: boolean
        duration:
          type: integer
          format: int32
        numThemes:
          type: integer
          format: int32
        numWeeks:
          type: integer
          format: int32
        currentWeek:
          type: integer
          format: int32
        currentWeekDetail:
          type: object
          additionalProperties:
            type: object
        teacherIds:
          type: array
          items:
            type: string
        isProctorizer:
          type: boolean
        hasVirtualAssistant:
          type: boolean
        customizedMessages:
          type: array
          items:
            type: string
        unities:
          type: array
          items:
            $ref: '#/components/schemas/SectionUnityResponse'
    SectionUnityResponse:
      type: object
      properties:
        unityId:
          type: string
        name:
          type: string
        description:
          type: string
        order:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        introduction:
          $ref: '#/components/schemas/Introduction'
        achievements:
          type: array
          items:
            type: string
    GetThemesByUnityResponse:
      type: object
      properties:
        themeId:
          type: string
        order:
          type: integer
          format: int32
        name:
          type: string
        weekNumber:
          type: integer
          format: int32
        unityId:
          type: string
    GetUnitiesByWeekResponse:
      type: object
      properties:
        unityId:
          type: string
        order:
          type: integer
          format: int32
        name:
          type: string
        weekNumber:
          type: integer
          format: int32
        themes:
          type: array
          items:
            $ref: '#/components/schemas/GetThemesByUnityResponse'
    GetWeeksBySectionResponse:
      type: object
      properties:
        weekNumber:
          type: integer
          format: int32
        name:
          type: string
        unities:
          type: array
          items:
            $ref: '#/components/schemas/GetUnitiesByWeekResponse'
    GetWeeksUnitiesThemesBySectionResponse:
      type: object
      properties:
        weeks:
          type: array
          items:
            $ref: '#/components/schemas/GetWeeksBySectionResponse'
    GetThemeResponse:
      type: object
      properties:
        themeId:
          type: string
        name:
          type: string
        order:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        weekNumber:
          type: integer
          format: int32
        unityId:
          type: string
        isFromTemplate:
          type: boolean
        isVisible:
          type: boolean
        isDelivered:
          type: boolean
        deliveredCount:
          type: integer
          format: int32
    ListThemesResponse:
      type: object
      properties:
        themes:
          type: array
          items:
            $ref: '#/components/schemas/GetThemeResponse'
    ContentResponse:
      type: object
      properties:
        contentId:
          type: string
        title:
          type: string
        description:
          type: string
        order:
          type: integer
          format: int32
        type:
          type: string
        dependent:
          type: boolean
        status:
          type: string
        publishedDate:
          type: string
        isFromTemplate:
          type: boolean
        metadata:
          $ref: '#/components/schemas/MetadataResp'
        etag:
          type: string
        themeId:
          type: string
        isVisible:
          type: boolean
        unreadComments:
          type: integer
          format: int32
        isDelivered:
          type: boolean
        deliveredCount:
          type: integer
          format: int32
        hasRubric:
          type: boolean
        weekNumber:
          type: integer
          format: int32
        titleTheme:
          type: string
        unityId:
          type: string
        activityId:
          type: string
    ListContentsResponse:
      type: object
      properties:
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ContentResponse'
    MetadataResp:
      type: object
    CoursePeriodResponse:
      type: object
      properties:
        courseId:
          type: string
        period:
          type: string
        syllabusUrl:
          type: string
    GetSectionFullResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCode:
          type: string
        courseId:
          type: string
        classNumber:
          type: string
        teacherId:
          type: string
        campus:
          type: string
        program:
          type: string
        modality:
          type: string
        period:
          type: string
        classroom:
          type: string
        turn:
          type: string
        module:
          type: string
        faculty:
          type: string
        acadCareer:
          type: string
        cycle:
          type: string
        capacity:
          type: integer
          format: int32
        start:
          type: string
        end:
          type: string
        active:
          type: boolean
        duration:
          type: integer
          format: int32
        numThemes:
          type: integer
          format: int32
        numWeeks:
          type: integer
          format: int32
        currentWeek:
          type: integer
          format: int32
        currentWeekDetail:
          type: object
          additionalProperties:
            type: object
        teacherIds:
          type: array
          items:
            type: string
        isProctorizer:
          type: boolean
        hasVirtualAssistant:
          type: boolean
        customizedMessages:
          type: array
          items:
            type: string
        unities:
          type: array
          items:
            $ref: '#/components/schemas/UnityFullResponse'
    ThemeFullResponse:
      type: object
      properties:
        themeId:
          type: string
        name:
          type: string
        order:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        weekNumber:
          type: integer
          format: int32
        unityId:
          type: string
        isFromTemplate:
          type: boolean
        isVisible:
          type: boolean
        isDelivered:
          type: boolean
        deliveredCount:
          type: integer
          format: int32
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ContentResponse'
    UnityFullResponse:
      type: object
      properties:
        unityId:
          type: string
        name:
          type: string
        description:
          type: string
        order:
          type: integer
          format: int32
        duration:
          type: integer
          format: int32
        introduction:
          $ref: '#/components/schemas/Introduction'
        achievements:
          type: array
          items:
            type: string
        themes:
          type: array
          items:
            $ref: '#/components/schemas/ThemeFullResponse'
    GetAcademicPeriodResponse:
      type: object
      properties:
        id:
          type: string
        period:
          type: string
        acadCareer:
          type: string
        module:
          type: string
        name:
          type: string
        active:
          type: boolean
        start:
          type: string
        end:
          type: string
        sectionId:
          type: string
        type:
          type: string
        displaySetting:
          $ref: '#/components/schemas/DisplaySetting'
        priority:
          type: integer
          format: int32
        parsedStartDate:
          type: string
          format: date
    ListAcademicPeriodResponse:
      type: object
      properties:
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetAcademicPeriodResponse'
    ResumeAcademicPeriodResponse:
      type: object
      properties:
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetAcademicPeriodResponse'
    ListSectionByPeriodAndNameResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/ListSectionByPeriodAndNameSingleResponse'
        totalPages:
          type: integer
          format: int32
        totalSections:
          type: integer
          format: int64
    ListSectionByPeriodAndNameSingleResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCreated:
          type: string
          format: date-time
        courseId:
          type: string
        courseName:
          type: string
        sectionCode:
          type: string
        classNumber:
          type: string
        academicPeriod:
          type: string
        teacherId:
          type: string
        teachers:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        teacherName:
          type: string
        teacherCode:
          type: string
        teacherPhoto:
          type: string
        enrolledStudents:
          type: integer
          format: int32
    ListAllAcademicPeriodResponse:
      type: object
      properties:
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetAcademicPeriodResponse'
    DashboardCourseSectionResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCode:
          type: string
        classroom:
          type: string
        classNumber:
          type: string
        modality:
          type: string
        teacherId:
          type: string
        teacherIds:
          type: array
          items:
            type: string
        acadCareer:
          type: string
        courseId:
          type: string
        courseCode:
          type: string
        name:
          type: string
        period:
          type: string
        module:
          type: string
        academicPeriodId:
          type: string
    ListDashboardCourseSectionResponse:
      type: object
      properties:
        list:
          type: array
          items:
            $ref: '#/components/schemas/DashboardCourseSectionResponse'
    AcademicPeriodResponse:
      type: object
      properties:
        id:
          type: string
        period:
          type: string
        acadCareer:
          type: string
        module:
          type: string
        name:
          type: string
        active:
          type: boolean
        start:
          type: string
        end:
          type: string
        type:
          type: string
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/PeriodDisplaySetting'
        sections:
          type: array
          items:
            $ref: '#/components/schemas/CourseSection'
    CourseSection:
      type: object
      properties:
        sectionId:
          type: string
        courseId:
          type: string
        progress:
          type: number
          format: double
        active:
          type: boolean
        sectionCode:
          type: string
        classroom:
          type: string
        classNumber:
          type: string
        modality:
          type: string
        acadCareer:
          type: string
        courseCode:
          type: string
        name:
          type: string
        period:
          type: string
        module:
          type: string
        teachers:
          type: array
          items:
            type: object
            additionalProperties:
              type: object
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/SectionDisplaySetting'
    ListAcademicPeriodsStudentResponse:
      type: object
      properties:
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/AcademicPeriodResponse'
        finishedCourses:
          type: array
          items:
            $ref: '#/components/schemas/CourseSection'
    PeriodDisplaySetting:
      type: object
      properties:
        role:
          type: string
        start:
          type: string
          format: date
        end:
          type: string
          format: date
    GetSectionBySectionIdCourseIdResponse:
      type: object
      properties:
        sectionId:
          type: string
        sectionCode:
          type: string
        courseId:
          type: string
        classNumber:
          type: string
        teacherId:
          type: string
        campus:
          type: string
        program:
          type: string
        modality:
          type: string
        period:
          type: string
        classroom:
          type: string
        turn:
          type: string
        module:
          type: string
        faculty:
          type: string
        acadCareer:
          type: string
        cycle:
          type: string
        capacity:
          type: integer
          format: int32
        start:
          type: string
        end:
          type: string
        active:
          type: boolean
        duration:
          type: integer
          format: int32
        numThemes:
          type: integer
          format: int32
        numWeeks:
          type: integer
          format: int32
        currentWeek:
          type: integer
          format: int32
        currentWeekDetail:
          type: object
          additionalProperties:
            type: object
        teacherIds:
          type: array
          items:
            type: string
        isProctorizer:
          type: boolean
        hasVirtualAssistant:
          type: boolean
        customizedMessages:
          type: array
          items:
            type: string
        courseName:
          type: string
    ListSectionsResponse:
      type: object
      properties:
        sections:
          type: array
          items:
            $ref: '#/components/schemas/GetSectionResponse'
    SimpleWeekSectionResponse:
      type: object
      properties:
        sectionId:
          type: string
        courseId:
          type: string
        period:
          type: string
        start:
          type: string
        currentWeek:
          type: integer
          format: int32
    ContentProgressStructure:
      type: object
      properties:
        contentId:
          type: string
        order:
          type: integer
          format: int32
        type:
          type: string
        dependent:
          type: boolean
        status:
          type: string
        etag:
          type: string
    CourseProgressStructureResponse:
      type: object
      properties:
        sectionId:
          type: string
        courseId:
          type: string
        period:
          type: string
        unities:
          type: array
          items:
            $ref: '#/components/schemas/UnityProgressStructure'
        currentWeek:
          type: integer
          format: int32
    ThemeProgressStructure:
      type: object
      properties:
        themeId:
          type: string
        order:
          type: integer
          format: int32
        weekNumber:
          type: integer
          format: int32
        contents:
          type: array
          items:
            $ref: '#/components/schemas/ContentProgressStructure'
        unityId:
          type: string
    UnityProgressStructure:
      type: object
      properties:
        unityId:
          type: string
        order:
          type: integer
          format: int32
        themes:
          type: array
          items:
            $ref: '#/components/schemas/ThemeProgressStructure'
    EvaluationSystemResponse:
      type: object
      properties:
        id:
          type: string
        description:
          type: string
        code:
          type: string
        typePractice:
          type: string
        courseCode:
          type: string
    GetAcademicPeriodsResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        code:
          type: string
        totalCourses:
          type: integer
          format: int32
        displaySettings:
          type: array
          items:
            $ref: '#/components/schemas/DisplaySetting'
    ListAcademicPeriodsAdminResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalRecords:
          type: integer
          format: int64
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/GetAcademicPeriodsResponse'
    AvailableYear:
      type: object
      properties:
        year:
          type: integer
          format: int32
        enabled:
          type: boolean
    CourseData:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalRecords:
          type: integer
          format: int64
        courseSections:
          type: array
          items:
            $ref: '#/components/schemas/CourseSection'
    ListSectionsAdminResponse:
      type: object
      properties:
        availableYears:
          type: array
          items:
            $ref: '#/components/schemas/AvailableYear'
        academicPeriods:
          type: array
          items:
            $ref: '#/components/schemas/AcademicPeriodResponse'
        courseData:
          $ref: '#/components/schemas/CourseData'
    MeetingIds:
      type: object
      properties:
        meetingId:
          type: string
    MeetingsToDeleteIds:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
    RequestAssociateSectionFunctionalityDetailDelete:
      type: object
      properties:
        sections:
          type: array
          items:
            type: string
    DeleteContentUrlFromFileResponse:
      type: object
      properties:
        stats:
          type: object
          additionalProperties:
            type: object
  securitySchemes:
    Authorization:
      type: http
      scheme: Bearer
      bearerFormat: JWT